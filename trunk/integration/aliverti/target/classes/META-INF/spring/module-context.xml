<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<description>Example job to get you started. It provides a
		skeleton for a typical batch application.</description>

	<bean id="lkProductReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
	    <property name="dataSource" ref="dataSourceAliverti"/>
	    <property name="sql" value="select id_marca, nombre from oha_marca"/>
	    <property name="rowMapper">
	        <bean class="kdw.aliverti.mapper.ReadProductMapper"/>
	    </property>
	</bean>
	
	<bean id="lkProductWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
	    <property name="resource" value="file:${batch.output.lkProduct}" />
	    <property name="lineAggregator">
	        <bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>
	    </property>
	</bean>
	
	<bean id="legacyStep"
		class="org.springframework.batch.core.step.item.SimpleStepFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="transactionManagerAliverti" />
		<property name="jobRepository" ref="jobRepository" />
		<property name="startLimit" value="100" />
		<property name="commitInterval" value="1" />
	</bean>
	
	<job id="loadDaily" xmlns="http://www.springframework.org/schema/batch">
		<step id="lkProduct" parent="legacyStep">
			<tasklet>
				<chunk reader="lkProductReader" writer="lkProductWriter" />
			</tasklet>
		</step>
	</job>
	
</beans>
